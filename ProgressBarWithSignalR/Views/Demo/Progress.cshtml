
@{
    ViewData["Title"] = "Progress";
}

@section Scripts{
    <script src="~/lib/signalr/dist/browser/signalr.js"></script>
    
    <script>
        function startTask() {
            $.post("/progress/Lengthy/" + progressConnectionId);
        }
    </script>

    <script>
        var progressConnectionId = "";
        var progressConnection;
    </script>

    <script>
        // Helper functions added for test purposes
        function openConnection() {

            progressConnection = new signalR.HubConnectionBuilder()
                .withUrl("/progressDemo")
                .build();

            progressConnection
                .start()
                .then(() => {

                    progressConnection.on("Connected", function (connectionId) {
                        progressConnectionId = connectionId;
                        $("#connId").html(connectionId);
                    });

                    $("#startButton").removeAttr("disabled");
                    $("#dropConnectionButton").removeAttr("disabled");
                    $("#openConnectionButton").attr("disabled", "disabled");
                    $("#msg").html("Connection established");
                })
                .catch(() => {
                    $("#msg").html("Error while establishing connection");
                });
        }

        function dropConnection() {
            progressConnection
                .stop()
                .then(() => {
                    progressConnectionId = "";
                    $("#connId").html(progressConnectionId);
                    $("#startButton").attr("disabled", "disabled");
                    $("#dropConnectionButton").attr("disabled", "disabled");
                    $("#openConnectionButton").removeAttr("disabled");
                    $("#msg").html("");
                })
                .catch(() => {
                    $("#msg").html("Error while dropping connection");
                });
        }</script>
    <script>
        // Automatically establish a connection upon loading. You can decide to do
        // that also on demand. It's up to you, in the end.
        openConnection();

        progressConnection.on("UpdateCount", (num) => {
            $("#count").html(num);
        });

        progressConnection.on("InitProgressBar", () => {
            setProgress(0);
            $("#notification").show();
        });

        progressConnection.invoke("InitProgress").catch(function (err) {
            return console.error(err.toString());
        });

        progressConnection.on("UpdateProgressBar", (perc) => {
            setProgress(perc);
        });

        progressConnection.on("ClearProgressBar", () => {
            setProgress(100);
            window.setTimeout(function () {
                $("#notification").hide();
                document.title = "REMOTE TASK";
            }, 2000);
        });

        function setProgress(percentage) {
            $("#workDone").text(percentage);
            $('.progress-bar').css('width', percentage + '%').attr('aria-valuenow', percentage);

            // Edit page title
            document.title = percentage + "% done";
        }


    </script>
}

<h1 class="text-center">
    Monitoring remote tasks
    <button class="btn btn-danger" disabled="disabled"
            id="openConnectionButton"
            onclick="openConnection()">
        Open connection
    </button>
    <button class="btn btn-danger" disabled="disabled"
            id="dropConnectionButton"
            onclick="dropConnection()">
        Drop connection
        <span class="badge" id="count">0</span>
    </button>
</h1>
<hr />
<button class="btn btn-primary" disabled="disabled"
        id="startButton"
        onclick="startTask()">
    <span class="fa fa-play"></span>
    Start remote task
</button>

<div clas="alert alert-info">
    <span id="msg"></span>
    <span class="badge" id="connId"></span>
</div>
<div id="notification" style="display:none">
    <h3>Amount of work done <span class="label label-info" id="workDone">0</span>%</h3>
    <div class="progress">
        <div class="progress-bar progress-bar-striped progress-bar-animated" role="progressbar"
             aria-valuenow="0"
             aria-valuemin="0"
             aria-valuemax="100">
            <span class="sr-only" id="workDone"></span>
        </div>
    </div>
</div>

<div role="alert" aria-live="assertive" aria-atomic="true" class="toast" data-autohide="false">
    <div class="toast-header">
        <strong class="mr-auto">Bootstrap</strong>
        <small>11 mins ago</small>
        <button type="button" class="ml-2 mb-1 close" data-dismiss="toast" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
    </div>
    <div class="toast-body">
        Hello, world! This is a toast message.
    </div>
</div>

<div class="spinner-border" role="status">
    <span class="sr-only">Loading...</span>
</div>